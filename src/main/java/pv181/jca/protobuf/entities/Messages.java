// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

package pv181.jca.protobuf.entities;

public final class Messages {
  private Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DemoMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pv181.jca.protobuf.entities.DemoMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 version = 1 [default = 1];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 1 [default = 1];</code>
     */
    int getVersion();

    /**
     * <code>optional bytes byteField = 2;</code>
     */
    boolean hasByteField();
    /**
     * <code>optional bytes byteField = 2;</code>
     */
    com.google.protobuf.ByteString getByteField();

    /**
     * <code>optional string stringField = 3;</code>
     */
    boolean hasStringField();
    /**
     * <code>optional string stringField = 3;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>optional string stringField = 3;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>optional int32 integerField = 4;</code>
     */
    boolean hasIntegerField();
    /**
     * <code>optional int32 integerField = 4;</code>
     */
    int getIntegerField();
  }
  /**
   * Protobuf type {@code pv181.jca.protobuf.entities.DemoMessage}
   *
   * <pre>
   * Demo message - for demonstration purposes.
   * ProtobufDemo.java shows how to use this message
   * For more information please refer to: 
   * https://developers.google.com/protocol-buffers/docs/proto
   * </pre>
   */
  public static final class DemoMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pv181.jca.protobuf.entities.DemoMessage)
      DemoMessageOrBuilder {
    // Use DemoMessage.newBuilder() to construct.
    private DemoMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DemoMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DemoMessage defaultInstance;
    public static DemoMessage getDefaultInstance() {
      return defaultInstance;
    }

    public DemoMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DemoMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              byteField_ = input.readBytes();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              stringField_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              integerField_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_DemoMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_DemoMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pv181.jca.protobuf.entities.Messages.DemoMessage.class, pv181.jca.protobuf.entities.Messages.DemoMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<DemoMessage> PARSER =
        new com.google.protobuf.AbstractParser<DemoMessage>() {
      public DemoMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DemoMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DemoMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 version = 1 [default = 1];</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 version = 1 [default = 1];</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int BYTEFIELD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString byteField_;
    /**
     * <code>optional bytes byteField = 2;</code>
     */
    public boolean hasByteField() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes byteField = 2;</code>
     */
    public com.google.protobuf.ByteString getByteField() {
      return byteField_;
    }

    public static final int STRINGFIELD_FIELD_NUMBER = 3;
    private java.lang.Object stringField_;
    /**
     * <code>optional string stringField = 3;</code>
     */
    public boolean hasStringField() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string stringField = 3;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringField_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stringField = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTEGERFIELD_FIELD_NUMBER = 4;
    private int integerField_;
    /**
     * <code>optional int32 integerField = 4;</code>
     */
    public boolean hasIntegerField() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 integerField = 4;</code>
     */
    public int getIntegerField() {
      return integerField_;
    }

    private void initFields() {
      version_ = 1;
      byteField_ = com.google.protobuf.ByteString.EMPTY;
      stringField_ = "";
      integerField_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, byteField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, integerField_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, byteField_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getStringFieldBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, integerField_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.DemoMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pv181.jca.protobuf.entities.Messages.DemoMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pv181.jca.protobuf.entities.DemoMessage}
     *
     * <pre>
     * Demo message - for demonstration purposes.
     * ProtobufDemo.java shows how to use this message
     * For more information please refer to: 
     * https://developers.google.com/protocol-buffers/docs/proto
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pv181.jca.protobuf.entities.DemoMessage)
        pv181.jca.protobuf.entities.Messages.DemoMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_DemoMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_DemoMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pv181.jca.protobuf.entities.Messages.DemoMessage.class, pv181.jca.protobuf.entities.Messages.DemoMessage.Builder.class);
      }

      // Construct using pv181.jca.protobuf.entities.Messages.DemoMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        byteField_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        stringField_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        integerField_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_DemoMessage_descriptor;
      }

      public pv181.jca.protobuf.entities.Messages.DemoMessage getDefaultInstanceForType() {
        return pv181.jca.protobuf.entities.Messages.DemoMessage.getDefaultInstance();
      }

      public pv181.jca.protobuf.entities.Messages.DemoMessage build() {
        pv181.jca.protobuf.entities.Messages.DemoMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pv181.jca.protobuf.entities.Messages.DemoMessage buildPartial() {
        pv181.jca.protobuf.entities.Messages.DemoMessage result = new pv181.jca.protobuf.entities.Messages.DemoMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.byteField_ = byteField_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stringField_ = stringField_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.integerField_ = integerField_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pv181.jca.protobuf.entities.Messages.DemoMessage) {
          return mergeFrom((pv181.jca.protobuf.entities.Messages.DemoMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pv181.jca.protobuf.entities.Messages.DemoMessage other) {
        if (other == pv181.jca.protobuf.entities.Messages.DemoMessage.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasByteField()) {
          setByteField(other.getByteField());
        }
        if (other.hasStringField()) {
          bitField0_ |= 0x00000004;
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.hasIntegerField()) {
          setIntegerField(other.getIntegerField());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pv181.jca.protobuf.entities.Messages.DemoMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pv181.jca.protobuf.entities.Messages.DemoMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ = 1;
      /**
       * <code>optional int32 version = 1 [default = 1];</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 version = 1 [default = 1];</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 1 [default = 1];</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 1 [default = 1];</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString byteField_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes byteField = 2;</code>
       */
      public boolean hasByteField() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes byteField = 2;</code>
       */
      public com.google.protobuf.ByteString getByteField() {
        return byteField_;
      }
      /**
       * <code>optional bytes byteField = 2;</code>
       */
      public Builder setByteField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        byteField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes byteField = 2;</code>
       */
      public Builder clearByteField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        byteField_ = getDefaultInstance().getByteField();
        onChanged();
        return this;
      }

      private java.lang.Object stringField_ = "";
      /**
       * <code>optional string stringField = 3;</code>
       */
      public boolean hasStringField() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string stringField = 3;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringField_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stringField = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stringField = 3;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringField = 3;</code>
       */
      public Builder clearStringField() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringField = 3;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stringField_ = value;
        onChanged();
        return this;
      }

      private int integerField_ ;
      /**
       * <code>optional int32 integerField = 4;</code>
       */
      public boolean hasIntegerField() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 integerField = 4;</code>
       */
      public int getIntegerField() {
        return integerField_;
      }
      /**
       * <code>optional int32 integerField = 4;</code>
       */
      public Builder setIntegerField(int value) {
        bitField0_ |= 0x00000008;
        integerField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 integerField = 4;</code>
       */
      public Builder clearIntegerField() {
        bitField0_ = (bitField0_ & ~0x00000008);
        integerField_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pv181.jca.protobuf.entities.DemoMessage)
    }

    static {
      defaultInstance = new DemoMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pv181.jca.protobuf.entities.DemoMessage)
  }

  public interface AESCiphertextMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pv181.jca.protobuf.entities.AESCiphertextMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes iv = 1;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    boolean hasIv();
    /**
     * <code>optional bytes iv = 1;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    com.google.protobuf.ByteString getIv();

    /**
     * <code>optional bytes salt = 2;</code>
     *
     * <pre>
     * If AES key was generated using PBKDF2, here is salt specified 
     * in order to be able to reconstruct encryption key from passphrase.
     * Salt is a public parameter as IV.
     * </pre>
     */
    boolean hasSalt();
    /**
     * <code>optional bytes salt = 2;</code>
     *
     * <pre>
     * If AES key was generated using PBKDF2, here is salt specified 
     * in order to be able to reconstruct encryption key from passphrase.
     * Salt is a public parameter as IV.
     * </pre>
     */
    com.google.protobuf.ByteString getSalt();

    /**
     * <code>optional bytes ciphertext = 3;</code>
     *
     * <pre>
     * AES Ciphertext.
     * </pre>
     */
    boolean hasCiphertext();
    /**
     * <code>optional bytes ciphertext = 3;</code>
     *
     * <pre>
     * AES Ciphertext.
     * </pre>
     */
    com.google.protobuf.ByteString getCiphertext();
  }
  /**
   * Protobuf type {@code pv181.jca.protobuf.entities.AESCiphertextMessage}
   *
   * <pre>
   * Message for AES Ciphertext with initialization vector.
   * </pre>
   */
  public static final class AESCiphertextMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pv181.jca.protobuf.entities.AESCiphertextMessage)
      AESCiphertextMessageOrBuilder {
    // Use AESCiphertextMessage.newBuilder() to construct.
    private AESCiphertextMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AESCiphertextMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AESCiphertextMessage defaultInstance;
    public static AESCiphertextMessage getDefaultInstance() {
      return defaultInstance;
    }

    public AESCiphertextMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AESCiphertextMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              iv_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              salt_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ciphertext_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.class, pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<AESCiphertextMessage> PARSER =
        new com.google.protobuf.AbstractParser<AESCiphertextMessage>() {
      public AESCiphertextMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AESCiphertextMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AESCiphertextMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int IV_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString iv_;
    /**
     * <code>optional bytes iv = 1;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    public boolean hasIv() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes iv = 1;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    public com.google.protobuf.ByteString getIv() {
      return iv_;
    }

    public static final int SALT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString salt_;
    /**
     * <code>optional bytes salt = 2;</code>
     *
     * <pre>
     * If AES key was generated using PBKDF2, here is salt specified 
     * in order to be able to reconstruct encryption key from passphrase.
     * Salt is a public parameter as IV.
     * </pre>
     */
    public boolean hasSalt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes salt = 2;</code>
     *
     * <pre>
     * If AES key was generated using PBKDF2, here is salt specified 
     * in order to be able to reconstruct encryption key from passphrase.
     * Salt is a public parameter as IV.
     * </pre>
     */
    public com.google.protobuf.ByteString getSalt() {
      return salt_;
    }

    public static final int CIPHERTEXT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString ciphertext_;
    /**
     * <code>optional bytes ciphertext = 3;</code>
     *
     * <pre>
     * AES Ciphertext.
     * </pre>
     */
    public boolean hasCiphertext() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes ciphertext = 3;</code>
     *
     * <pre>
     * AES Ciphertext.
     * </pre>
     */
    public com.google.protobuf.ByteString getCiphertext() {
      return ciphertext_;
    }

    private void initFields() {
      iv_ = com.google.protobuf.ByteString.EMPTY;
      salt_ = com.google.protobuf.ByteString.EMPTY;
      ciphertext_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, iv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, salt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, ciphertext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, iv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, salt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, ciphertext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pv181.jca.protobuf.entities.Messages.AESCiphertextMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pv181.jca.protobuf.entities.AESCiphertextMessage}
     *
     * <pre>
     * Message for AES Ciphertext with initialization vector.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pv181.jca.protobuf.entities.AESCiphertextMessage)
        pv181.jca.protobuf.entities.Messages.AESCiphertextMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.class, pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.Builder.class);
      }

      // Construct using pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        iv_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        salt_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        ciphertext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_descriptor;
      }

      public pv181.jca.protobuf.entities.Messages.AESCiphertextMessage getDefaultInstanceForType() {
        return pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.getDefaultInstance();
      }

      public pv181.jca.protobuf.entities.Messages.AESCiphertextMessage build() {
        pv181.jca.protobuf.entities.Messages.AESCiphertextMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pv181.jca.protobuf.entities.Messages.AESCiphertextMessage buildPartial() {
        pv181.jca.protobuf.entities.Messages.AESCiphertextMessage result = new pv181.jca.protobuf.entities.Messages.AESCiphertextMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iv_ = iv_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.salt_ = salt_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ciphertext_ = ciphertext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pv181.jca.protobuf.entities.Messages.AESCiphertextMessage) {
          return mergeFrom((pv181.jca.protobuf.entities.Messages.AESCiphertextMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pv181.jca.protobuf.entities.Messages.AESCiphertextMessage other) {
        if (other == pv181.jca.protobuf.entities.Messages.AESCiphertextMessage.getDefaultInstance()) return this;
        if (other.hasIv()) {
          setIv(other.getIv());
        }
        if (other.hasSalt()) {
          setSalt(other.getSalt());
        }
        if (other.hasCiphertext()) {
          setCiphertext(other.getCiphertext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pv181.jca.protobuf.entities.Messages.AESCiphertextMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pv181.jca.protobuf.entities.Messages.AESCiphertextMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString iv_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes iv = 1;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public boolean hasIv() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes iv = 1;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public com.google.protobuf.ByteString getIv() {
        return iv_;
      }
      /**
       * <code>optional bytes iv = 1;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public Builder setIv(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        iv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes iv = 1;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public Builder clearIv() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iv_ = getDefaultInstance().getIv();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString salt_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes salt = 2;</code>
       *
       * <pre>
       * If AES key was generated using PBKDF2, here is salt specified 
       * in order to be able to reconstruct encryption key from passphrase.
       * Salt is a public parameter as IV.
       * </pre>
       */
      public boolean hasSalt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes salt = 2;</code>
       *
       * <pre>
       * If AES key was generated using PBKDF2, here is salt specified 
       * in order to be able to reconstruct encryption key from passphrase.
       * Salt is a public parameter as IV.
       * </pre>
       */
      public com.google.protobuf.ByteString getSalt() {
        return salt_;
      }
      /**
       * <code>optional bytes salt = 2;</code>
       *
       * <pre>
       * If AES key was generated using PBKDF2, here is salt specified 
       * in order to be able to reconstruct encryption key from passphrase.
       * Salt is a public parameter as IV.
       * </pre>
       */
      public Builder setSalt(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        salt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes salt = 2;</code>
       *
       * <pre>
       * If AES key was generated using PBKDF2, here is salt specified 
       * in order to be able to reconstruct encryption key from passphrase.
       * Salt is a public parameter as IV.
       * </pre>
       */
      public Builder clearSalt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        salt_ = getDefaultInstance().getSalt();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString ciphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes ciphertext = 3;</code>
       *
       * <pre>
       * AES Ciphertext.
       * </pre>
       */
      public boolean hasCiphertext() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes ciphertext = 3;</code>
       *
       * <pre>
       * AES Ciphertext.
       * </pre>
       */
      public com.google.protobuf.ByteString getCiphertext() {
        return ciphertext_;
      }
      /**
       * <code>optional bytes ciphertext = 3;</code>
       *
       * <pre>
       * AES Ciphertext.
       * </pre>
       */
      public Builder setCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ciphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes ciphertext = 3;</code>
       *
       * <pre>
       * AES Ciphertext.
       * </pre>
       */
      public Builder clearCiphertext() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ciphertext_ = getDefaultInstance().getCiphertext();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pv181.jca.protobuf.entities.AESCiphertextMessage)
    }

    static {
      defaultInstance = new AESCiphertextMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pv181.jca.protobuf.entities.AESCiphertextMessage)
  }

  public interface HashMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pv181.jca.protobuf.entities.HashMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string uco = 1;</code>
     */
    boolean hasUco();
    /**
     * <code>required string uco = 1;</code>
     */
    java.lang.String getUco();
    /**
     * <code>required string uco = 1;</code>
     */
    com.google.protobuf.ByteString
        getUcoBytes();

    /**
     * <code>required int32 hashType = 2;</code>
     */
    boolean hasHashType();
    /**
     * <code>required int32 hashType = 2;</code>
     */
    int getHashType();

    /**
     * <code>optional uint64 salt = 3;</code>
     */
    boolean hasSalt();
    /**
     * <code>optional uint64 salt = 3;</code>
     */
    long getSalt();

    /**
     * <code>required string hashInput = 4;</code>
     *
     * <pre>
     * has to conform to format: UCO:SALT
     * </pre>
     */
    boolean hasHashInput();
    /**
     * <code>required string hashInput = 4;</code>
     *
     * <pre>
     * has to conform to format: UCO:SALT
     * </pre>
     */
    java.lang.String getHashInput();
    /**
     * <code>required string hashInput = 4;</code>
     *
     * <pre>
     * has to conform to format: UCO:SALT
     * </pre>
     */
    com.google.protobuf.ByteString
        getHashInputBytes();

    /**
     * <code>required bytes hash = 5;</code>
     *
     * <pre>
     * Outputs:
     * </pre>
     */
    boolean hasHash();
    /**
     * <code>required bytes hash = 5;</code>
     *
     * <pre>
     * Outputs:
     * </pre>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>optional string hashHexEncoded = 6;</code>
     */
    boolean hasHashHexEncoded();
    /**
     * <code>optional string hashHexEncoded = 6;</code>
     */
    java.lang.String getHashHexEncoded();
    /**
     * <code>optional string hashHexEncoded = 6;</code>
     */
    com.google.protobuf.ByteString
        getHashHexEncodedBytes();

    /**
     * <code>optional bytes aesIv = 7;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    boolean hasAesIv();
    /**
     * <code>optional bytes aesIv = 7;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    com.google.protobuf.ByteString getAesIv();

    /**
     * <code>optional bytes aesKey = 8;</code>
     *
     * <pre>
     * AES encryption key. 256bits long.
     * </pre>
     */
    boolean hasAesKey();
    /**
     * <code>optional bytes aesKey = 8;</code>
     *
     * <pre>
     * AES encryption key. 256bits long.
     * </pre>
     */
    com.google.protobuf.ByteString getAesKey();

    /**
     * <code>optional bytes aesCiphertext = 9;</code>
     *
     * <pre>
     * AES Ciphertext, use: AES/CBC/PKCS5Padding
     * </pre>
     */
    boolean hasAesCiphertext();
    /**
     * <code>optional bytes aesCiphertext = 9;</code>
     *
     * <pre>
     * AES Ciphertext, use: AES/CBC/PKCS5Padding
     * </pre>
     */
    com.google.protobuf.ByteString getAesCiphertext();

    /**
     * <code>optional bytes hmacKey = 10;</code>
     *
     * <pre>
     * HMAC key.
     * </pre>
     */
    boolean hasHmacKey();
    /**
     * <code>optional bytes hmacKey = 10;</code>
     *
     * <pre>
     * HMAC key.
     * </pre>
     */
    com.google.protobuf.ByteString getHmacKey();

    /**
     * <code>optional bytes hmac = 11;</code>
     *
     * <pre>
     * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
     * </pre>
     */
    boolean hasHmac();
    /**
     * <code>optional bytes hmac = 11;</code>
     *
     * <pre>
     * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
     * </pre>
     */
    com.google.protobuf.ByteString getHmac();

    /**
     * <code>optional bytes privateKey = 12;</code>
     *
     * <pre>
     * Generate 8192 bit RSA key-pair and write it here.
     * </pre>
     */
    boolean hasPrivateKey();
    /**
     * <code>optional bytes privateKey = 12;</code>
     *
     * <pre>
     * Generate 8192 bit RSA key-pair and write it here.
     * </pre>
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <code>optional bytes publicKey = 13;</code>
     */
    boolean hasPublicKey();
    /**
     * <code>optional bytes publicKey = 13;</code>
     */
    com.google.protobuf.ByteString getPublicKey();

    /**
     * <code>optional bytes rsaSignature = 14;</code>
     *
     * <pre>
     * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
     * </pre>
     */
    boolean hasRsaSignature();
    /**
     * <code>optional bytes rsaSignature = 14;</code>
     *
     * <pre>
     * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
     * </pre>
     */
    com.google.protobuf.ByteString getRsaSignature();

    /**
     * <code>optional bytes rsaCiphertext = 15;</code>
     *
     * <pre>
     * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
     * </pre>
     */
    boolean hasRsaCiphertext();
    /**
     * <code>optional bytes rsaCiphertext = 15;</code>
     *
     * <pre>
     * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
     * </pre>
     */
    com.google.protobuf.ByteString getRsaCiphertext();
  }
  /**
   * Protobuf type {@code pv181.jca.protobuf.entities.HashMessage}
   *
   * <pre>
   * Assignment 01:
   * Hash message for reporting predefined hash collisions.
   * </pre>
   */
  public static final class HashMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pv181.jca.protobuf.entities.HashMessage)
      HashMessageOrBuilder {
    // Use HashMessage.newBuilder() to construct.
    private HashMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HashMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HashMessage defaultInstance;
    public static HashMessage getDefaultInstance() {
      return defaultInstance;
    }

    public HashMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HashMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              uco_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hashType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              salt_ = input.readUInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              hashInput_ = bs;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              hash_ = input.readBytes();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              hashHexEncoded_ = bs;
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              aesIv_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              aesKey_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              aesCiphertext_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              hmacKey_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              hmac_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              privateKey_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              publicKey_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              rsaSignature_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              rsaCiphertext_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_HashMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_HashMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pv181.jca.protobuf.entities.Messages.HashMessage.class, pv181.jca.protobuf.entities.Messages.HashMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<HashMessage> PARSER =
        new com.google.protobuf.AbstractParser<HashMessage>() {
      public HashMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HashMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HashMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UCO_FIELD_NUMBER = 1;
    private java.lang.Object uco_;
    /**
     * <code>required string uco = 1;</code>
     */
    public boolean hasUco() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uco = 1;</code>
     */
    public java.lang.String getUco() {
      java.lang.Object ref = uco_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uco_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uco = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUcoBytes() {
      java.lang.Object ref = uco_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uco_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HASHTYPE_FIELD_NUMBER = 2;
    private int hashType_;
    /**
     * <code>required int32 hashType = 2;</code>
     */
    public boolean hasHashType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 hashType = 2;</code>
     */
    public int getHashType() {
      return hashType_;
    }

    public static final int SALT_FIELD_NUMBER = 3;
    private long salt_;
    /**
     * <code>optional uint64 salt = 3;</code>
     */
    public boolean hasSalt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 salt = 3;</code>
     */
    public long getSalt() {
      return salt_;
    }

    public static final int HASHINPUT_FIELD_NUMBER = 4;
    private java.lang.Object hashInput_;
    /**
     * <code>required string hashInput = 4;</code>
     *
     * <pre>
     * has to conform to format: UCO:SALT
     * </pre>
     */
    public boolean hasHashInput() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string hashInput = 4;</code>
     *
     * <pre>
     * has to conform to format: UCO:SALT
     * </pre>
     */
    public java.lang.String getHashInput() {
      java.lang.Object ref = hashInput_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hashInput_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hashInput = 4;</code>
     *
     * <pre>
     * has to conform to format: UCO:SALT
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHashInputBytes() {
      java.lang.Object ref = hashInput_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hashInput_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HASH_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>required bytes hash = 5;</code>
     *
     * <pre>
     * Outputs:
     * </pre>
     */
    public boolean hasHash() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes hash = 5;</code>
     *
     * <pre>
     * Outputs:
     * </pre>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int HASHHEXENCODED_FIELD_NUMBER = 6;
    private java.lang.Object hashHexEncoded_;
    /**
     * <code>optional string hashHexEncoded = 6;</code>
     */
    public boolean hasHashHexEncoded() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string hashHexEncoded = 6;</code>
     */
    public java.lang.String getHashHexEncoded() {
      java.lang.Object ref = hashHexEncoded_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hashHexEncoded_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hashHexEncoded = 6;</code>
     */
    public com.google.protobuf.ByteString
        getHashHexEncodedBytes() {
      java.lang.Object ref = hashHexEncoded_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hashHexEncoded_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AESIV_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString aesIv_;
    /**
     * <code>optional bytes aesIv = 7;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    public boolean hasAesIv() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes aesIv = 7;</code>
     *
     * <pre>
     * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
     * </pre>
     */
    public com.google.protobuf.ByteString getAesIv() {
      return aesIv_;
    }

    public static final int AESKEY_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString aesKey_;
    /**
     * <code>optional bytes aesKey = 8;</code>
     *
     * <pre>
     * AES encryption key. 256bits long.
     * </pre>
     */
    public boolean hasAesKey() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bytes aesKey = 8;</code>
     *
     * <pre>
     * AES encryption key. 256bits long.
     * </pre>
     */
    public com.google.protobuf.ByteString getAesKey() {
      return aesKey_;
    }

    public static final int AESCIPHERTEXT_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString aesCiphertext_;
    /**
     * <code>optional bytes aesCiphertext = 9;</code>
     *
     * <pre>
     * AES Ciphertext, use: AES/CBC/PKCS5Padding
     * </pre>
     */
    public boolean hasAesCiphertext() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bytes aesCiphertext = 9;</code>
     *
     * <pre>
     * AES Ciphertext, use: AES/CBC/PKCS5Padding
     * </pre>
     */
    public com.google.protobuf.ByteString getAesCiphertext() {
      return aesCiphertext_;
    }

    public static final int HMACKEY_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString hmacKey_;
    /**
     * <code>optional bytes hmacKey = 10;</code>
     *
     * <pre>
     * HMAC key.
     * </pre>
     */
    public boolean hasHmacKey() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bytes hmacKey = 10;</code>
     *
     * <pre>
     * HMAC key.
     * </pre>
     */
    public com.google.protobuf.ByteString getHmacKey() {
      return hmacKey_;
    }

    public static final int HMAC_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString hmac_;
    /**
     * <code>optional bytes hmac = 11;</code>
     *
     * <pre>
     * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
     * </pre>
     */
    public boolean hasHmac() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bytes hmac = 11;</code>
     *
     * <pre>
     * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
     * </pre>
     */
    public com.google.protobuf.ByteString getHmac() {
      return hmac_;
    }

    public static final int PRIVATEKEY_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <code>optional bytes privateKey = 12;</code>
     *
     * <pre>
     * Generate 8192 bit RSA key-pair and write it here.
     * </pre>
     */
    public boolean hasPrivateKey() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bytes privateKey = 12;</code>
     *
     * <pre>
     * Generate 8192 bit RSA key-pair and write it here.
     * </pre>
     */
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }

    public static final int PUBLICKEY_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString publicKey_;
    /**
     * <code>optional bytes publicKey = 13;</code>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bytes publicKey = 13;</code>
     */
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    public static final int RSASIGNATURE_FIELD_NUMBER = 14;
    private com.google.protobuf.ByteString rsaSignature_;
    /**
     * <code>optional bytes rsaSignature = 14;</code>
     *
     * <pre>
     * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
     * </pre>
     */
    public boolean hasRsaSignature() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bytes rsaSignature = 14;</code>
     *
     * <pre>
     * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
     * </pre>
     */
    public com.google.protobuf.ByteString getRsaSignature() {
      return rsaSignature_;
    }

    public static final int RSACIPHERTEXT_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString rsaCiphertext_;
    /**
     * <code>optional bytes rsaCiphertext = 15;</code>
     *
     * <pre>
     * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
     * </pre>
     */
    public boolean hasRsaCiphertext() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bytes rsaCiphertext = 15;</code>
     *
     * <pre>
     * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
     * </pre>
     */
    public com.google.protobuf.ByteString getRsaCiphertext() {
      return rsaCiphertext_;
    }

    private void initFields() {
      uco_ = "";
      hashType_ = 0;
      salt_ = 0L;
      hashInput_ = "";
      hash_ = com.google.protobuf.ByteString.EMPTY;
      hashHexEncoded_ = "";
      aesIv_ = com.google.protobuf.ByteString.EMPTY;
      aesKey_ = com.google.protobuf.ByteString.EMPTY;
      aesCiphertext_ = com.google.protobuf.ByteString.EMPTY;
      hmacKey_ = com.google.protobuf.ByteString.EMPTY;
      hmac_ = com.google.protobuf.ByteString.EMPTY;
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
      rsaSignature_ = com.google.protobuf.ByteString.EMPTY;
      rsaCiphertext_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUco()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHashType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHashInput()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUcoBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, hashType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, salt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHashInputBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, hash_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getHashHexEncodedBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, aesIv_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, aesKey_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, aesCiphertext_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, hmacKey_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, hmac_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, privateKey_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, publicKey_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, rsaSignature_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, rsaCiphertext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUcoBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hashType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, salt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHashInputBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, hash_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getHashHexEncodedBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, aesIv_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, aesKey_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, aesCiphertext_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, hmacKey_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, hmac_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, privateKey_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, publicKey_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, rsaSignature_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, rsaCiphertext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pv181.jca.protobuf.entities.Messages.HashMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pv181.jca.protobuf.entities.Messages.HashMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pv181.jca.protobuf.entities.HashMessage}
     *
     * <pre>
     * Assignment 01:
     * Hash message for reporting predefined hash collisions.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pv181.jca.protobuf.entities.HashMessage)
        pv181.jca.protobuf.entities.Messages.HashMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_HashMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_HashMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pv181.jca.protobuf.entities.Messages.HashMessage.class, pv181.jca.protobuf.entities.Messages.HashMessage.Builder.class);
      }

      // Construct using pv181.jca.protobuf.entities.Messages.HashMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uco_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        hashType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        salt_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        hashInput_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        hash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        hashHexEncoded_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        aesIv_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        aesKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        aesCiphertext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        hmacKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        hmac_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        privateKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        rsaSignature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        rsaCiphertext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pv181.jca.protobuf.entities.Messages.internal_static_pv181_jca_protobuf_entities_HashMessage_descriptor;
      }

      public pv181.jca.protobuf.entities.Messages.HashMessage getDefaultInstanceForType() {
        return pv181.jca.protobuf.entities.Messages.HashMessage.getDefaultInstance();
      }

      public pv181.jca.protobuf.entities.Messages.HashMessage build() {
        pv181.jca.protobuf.entities.Messages.HashMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pv181.jca.protobuf.entities.Messages.HashMessage buildPartial() {
        pv181.jca.protobuf.entities.Messages.HashMessage result = new pv181.jca.protobuf.entities.Messages.HashMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uco_ = uco_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hashType_ = hashType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.salt_ = salt_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hashInput_ = hashInput_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hash_ = hash_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hashHexEncoded_ = hashHexEncoded_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.aesIv_ = aesIv_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.aesKey_ = aesKey_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.aesCiphertext_ = aesCiphertext_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.hmacKey_ = hmacKey_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.hmac_ = hmac_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.privateKey_ = privateKey_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.publicKey_ = publicKey_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.rsaSignature_ = rsaSignature_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.rsaCiphertext_ = rsaCiphertext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pv181.jca.protobuf.entities.Messages.HashMessage) {
          return mergeFrom((pv181.jca.protobuf.entities.Messages.HashMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pv181.jca.protobuf.entities.Messages.HashMessage other) {
        if (other == pv181.jca.protobuf.entities.Messages.HashMessage.getDefaultInstance()) return this;
        if (other.hasUco()) {
          bitField0_ |= 0x00000001;
          uco_ = other.uco_;
          onChanged();
        }
        if (other.hasHashType()) {
          setHashType(other.getHashType());
        }
        if (other.hasSalt()) {
          setSalt(other.getSalt());
        }
        if (other.hasHashInput()) {
          bitField0_ |= 0x00000008;
          hashInput_ = other.hashInput_;
          onChanged();
        }
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        if (other.hasHashHexEncoded()) {
          bitField0_ |= 0x00000020;
          hashHexEncoded_ = other.hashHexEncoded_;
          onChanged();
        }
        if (other.hasAesIv()) {
          setAesIv(other.getAesIv());
        }
        if (other.hasAesKey()) {
          setAesKey(other.getAesKey());
        }
        if (other.hasAesCiphertext()) {
          setAesCiphertext(other.getAesCiphertext());
        }
        if (other.hasHmacKey()) {
          setHmacKey(other.getHmacKey());
        }
        if (other.hasHmac()) {
          setHmac(other.getHmac());
        }
        if (other.hasPrivateKey()) {
          setPrivateKey(other.getPrivateKey());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        if (other.hasRsaSignature()) {
          setRsaSignature(other.getRsaSignature());
        }
        if (other.hasRsaCiphertext()) {
          setRsaCiphertext(other.getRsaCiphertext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUco()) {
          
          return false;
        }
        if (!hasHashType()) {
          
          return false;
        }
        if (!hasHashInput()) {
          
          return false;
        }
        if (!hasHash()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pv181.jca.protobuf.entities.Messages.HashMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pv181.jca.protobuf.entities.Messages.HashMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uco_ = "";
      /**
       * <code>required string uco = 1;</code>
       */
      public boolean hasUco() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uco = 1;</code>
       */
      public java.lang.String getUco() {
        java.lang.Object ref = uco_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uco_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uco = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUcoBytes() {
        java.lang.Object ref = uco_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uco_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uco = 1;</code>
       */
      public Builder setUco(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uco_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uco = 1;</code>
       */
      public Builder clearUco() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uco_ = getDefaultInstance().getUco();
        onChanged();
        return this;
      }
      /**
       * <code>required string uco = 1;</code>
       */
      public Builder setUcoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uco_ = value;
        onChanged();
        return this;
      }

      private int hashType_ ;
      /**
       * <code>required int32 hashType = 2;</code>
       */
      public boolean hasHashType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 hashType = 2;</code>
       */
      public int getHashType() {
        return hashType_;
      }
      /**
       * <code>required int32 hashType = 2;</code>
       */
      public Builder setHashType(int value) {
        bitField0_ |= 0x00000002;
        hashType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 hashType = 2;</code>
       */
      public Builder clearHashType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hashType_ = 0;
        onChanged();
        return this;
      }

      private long salt_ ;
      /**
       * <code>optional uint64 salt = 3;</code>
       */
      public boolean hasSalt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 salt = 3;</code>
       */
      public long getSalt() {
        return salt_;
      }
      /**
       * <code>optional uint64 salt = 3;</code>
       */
      public Builder setSalt(long value) {
        bitField0_ |= 0x00000004;
        salt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 salt = 3;</code>
       */
      public Builder clearSalt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        salt_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object hashInput_ = "";
      /**
       * <code>required string hashInput = 4;</code>
       *
       * <pre>
       * has to conform to format: UCO:SALT
       * </pre>
       */
      public boolean hasHashInput() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string hashInput = 4;</code>
       *
       * <pre>
       * has to conform to format: UCO:SALT
       * </pre>
       */
      public java.lang.String getHashInput() {
        java.lang.Object ref = hashInput_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hashInput_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hashInput = 4;</code>
       *
       * <pre>
       * has to conform to format: UCO:SALT
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHashInputBytes() {
        java.lang.Object ref = hashInput_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hashInput_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hashInput = 4;</code>
       *
       * <pre>
       * has to conform to format: UCO:SALT
       * </pre>
       */
      public Builder setHashInput(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hashInput_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hashInput = 4;</code>
       *
       * <pre>
       * has to conform to format: UCO:SALT
       * </pre>
       */
      public Builder clearHashInput() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hashInput_ = getDefaultInstance().getHashInput();
        onChanged();
        return this;
      }
      /**
       * <code>required string hashInput = 4;</code>
       *
       * <pre>
       * has to conform to format: UCO:SALT
       * </pre>
       */
      public Builder setHashInputBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hashInput_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes hash = 5;</code>
       *
       * <pre>
       * Outputs:
       * </pre>
       */
      public boolean hasHash() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes hash = 5;</code>
       *
       * <pre>
       * Outputs:
       * </pre>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>required bytes hash = 5;</code>
       *
       * <pre>
       * Outputs:
       * </pre>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes hash = 5;</code>
       *
       * <pre>
       * Outputs:
       * </pre>
       */
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private java.lang.Object hashHexEncoded_ = "";
      /**
       * <code>optional string hashHexEncoded = 6;</code>
       */
      public boolean hasHashHexEncoded() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string hashHexEncoded = 6;</code>
       */
      public java.lang.String getHashHexEncoded() {
        java.lang.Object ref = hashHexEncoded_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hashHexEncoded_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hashHexEncoded = 6;</code>
       */
      public com.google.protobuf.ByteString
          getHashHexEncodedBytes() {
        java.lang.Object ref = hashHexEncoded_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hashHexEncoded_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hashHexEncoded = 6;</code>
       */
      public Builder setHashHexEncoded(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        hashHexEncoded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hashHexEncoded = 6;</code>
       */
      public Builder clearHashHexEncoded() {
        bitField0_ = (bitField0_ & ~0x00000020);
        hashHexEncoded_ = getDefaultInstance().getHashHexEncoded();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hashHexEncoded = 6;</code>
       */
      public Builder setHashHexEncodedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        hashHexEncoded_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aesIv_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes aesIv = 7;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public boolean hasAesIv() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes aesIv = 7;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public com.google.protobuf.ByteString getAesIv() {
        return aesIv_;
      }
      /**
       * <code>optional bytes aesIv = 7;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public Builder setAesIv(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        aesIv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes aesIv = 7;</code>
       *
       * <pre>
       * Initialization vector for AES. Suitable for some cipher modes e.g., cbc.
       * </pre>
       */
      public Builder clearAesIv() {
        bitField0_ = (bitField0_ & ~0x00000040);
        aesIv_ = getDefaultInstance().getAesIv();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aesKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes aesKey = 8;</code>
       *
       * <pre>
       * AES encryption key. 256bits long.
       * </pre>
       */
      public boolean hasAesKey() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bytes aesKey = 8;</code>
       *
       * <pre>
       * AES encryption key. 256bits long.
       * </pre>
       */
      public com.google.protobuf.ByteString getAesKey() {
        return aesKey_;
      }
      /**
       * <code>optional bytes aesKey = 8;</code>
       *
       * <pre>
       * AES encryption key. 256bits long.
       * </pre>
       */
      public Builder setAesKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        aesKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes aesKey = 8;</code>
       *
       * <pre>
       * AES encryption key. 256bits long.
       * </pre>
       */
      public Builder clearAesKey() {
        bitField0_ = (bitField0_ & ~0x00000080);
        aesKey_ = getDefaultInstance().getAesKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aesCiphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes aesCiphertext = 9;</code>
       *
       * <pre>
       * AES Ciphertext, use: AES/CBC/PKCS5Padding
       * </pre>
       */
      public boolean hasAesCiphertext() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bytes aesCiphertext = 9;</code>
       *
       * <pre>
       * AES Ciphertext, use: AES/CBC/PKCS5Padding
       * </pre>
       */
      public com.google.protobuf.ByteString getAesCiphertext() {
        return aesCiphertext_;
      }
      /**
       * <code>optional bytes aesCiphertext = 9;</code>
       *
       * <pre>
       * AES Ciphertext, use: AES/CBC/PKCS5Padding
       * </pre>
       */
      public Builder setAesCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        aesCiphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes aesCiphertext = 9;</code>
       *
       * <pre>
       * AES Ciphertext, use: AES/CBC/PKCS5Padding
       * </pre>
       */
      public Builder clearAesCiphertext() {
        bitField0_ = (bitField0_ & ~0x00000100);
        aesCiphertext_ = getDefaultInstance().getAesCiphertext();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hmacKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes hmacKey = 10;</code>
       *
       * <pre>
       * HMAC key.
       * </pre>
       */
      public boolean hasHmacKey() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bytes hmacKey = 10;</code>
       *
       * <pre>
       * HMAC key.
       * </pre>
       */
      public com.google.protobuf.ByteString getHmacKey() {
        return hmacKey_;
      }
      /**
       * <code>optional bytes hmacKey = 10;</code>
       *
       * <pre>
       * HMAC key.
       * </pre>
       */
      public Builder setHmacKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        hmacKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes hmacKey = 10;</code>
       *
       * <pre>
       * HMAC key.
       * </pre>
       */
      public Builder clearHmacKey() {
        bitField0_ = (bitField0_ & ~0x00000200);
        hmacKey_ = getDefaultInstance().getHmacKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hmac_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes hmac = 11;</code>
       *
       * <pre>
       * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
       * </pre>
       */
      public boolean hasHmac() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bytes hmac = 11;</code>
       *
       * <pre>
       * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
       * </pre>
       */
      public com.google.protobuf.ByteString getHmac() {
        return hmac_;
      }
      /**
       * <code>optional bytes hmac = 11;</code>
       *
       * <pre>
       * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
       * </pre>
       */
      public Builder setHmac(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        hmac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes hmac = 11;</code>
       *
       * <pre>
       * HMAC value, Mac mac = Mac.getInstance("HmacSHA1");
       * </pre>
       */
      public Builder clearHmac() {
        bitField0_ = (bitField0_ & ~0x00000400);
        hmac_ = getDefaultInstance().getHmac();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes privateKey = 12;</code>
       *
       * <pre>
       * Generate 8192 bit RSA key-pair and write it here.
       * </pre>
       */
      public boolean hasPrivateKey() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bytes privateKey = 12;</code>
       *
       * <pre>
       * Generate 8192 bit RSA key-pair and write it here.
       * </pre>
       */
      public com.google.protobuf.ByteString getPrivateKey() {
        return privateKey_;
      }
      /**
       * <code>optional bytes privateKey = 12;</code>
       *
       * <pre>
       * Generate 8192 bit RSA key-pair and write it here.
       * </pre>
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        privateKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes privateKey = 12;</code>
       *
       * <pre>
       * Generate 8192 bit RSA key-pair and write it here.
       * </pre>
       */
      public Builder clearPrivateKey() {
        bitField0_ = (bitField0_ & ~0x00000800);
        privateKey_ = getDefaultInstance().getPrivateKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes publicKey = 13;</code>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bytes publicKey = 13;</code>
       */
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <code>optional bytes publicKey = 13;</code>
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes publicKey = 13;</code>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00001000);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rsaSignature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes rsaSignature = 14;</code>
       *
       * <pre>
       * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
       * </pre>
       */
      public boolean hasRsaSignature() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bytes rsaSignature = 14;</code>
       *
       * <pre>
       * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
       * </pre>
       */
      public com.google.protobuf.ByteString getRsaSignature() {
        return rsaSignature_;
      }
      /**
       * <code>optional bytes rsaSignature = 14;</code>
       *
       * <pre>
       * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
       * </pre>
       */
      public Builder setRsaSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        rsaSignature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes rsaSignature = 14;</code>
       *
       * <pre>
       * Signature of the digest. Use: java.security.Signature sig = java.security.Signature.getInstance("SHA1WithRSA"); 
       * </pre>
       */
      public Builder clearRsaSignature() {
        bitField0_ = (bitField0_ & ~0x00002000);
        rsaSignature_ = getDefaultInstance().getRsaSignature();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rsaCiphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes rsaCiphertext = 15;</code>
       *
       * <pre>
       * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
       * </pre>
       */
      public boolean hasRsaCiphertext() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bytes rsaCiphertext = 15;</code>
       *
       * <pre>
       * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
       * </pre>
       */
      public com.google.protobuf.ByteString getRsaCiphertext() {
        return rsaCiphertext_;
      }
      /**
       * <code>optional bytes rsaCiphertext = 15;</code>
       *
       * <pre>
       * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
       * </pre>
       */
      public Builder setRsaCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        rsaCiphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes rsaCiphertext = 15;</code>
       *
       * <pre>
       * RSA encryption of the digest. Use: Cipher.getInstance("RSA/ECB/PKCS1PADDING");
       * </pre>
       */
      public Builder clearRsaCiphertext() {
        bitField0_ = (bitField0_ & ~0x00004000);
        rsaCiphertext_ = getDefaultInstance().getRsaCiphertext();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pv181.jca.protobuf.entities.HashMessage)
    }

    static {
      defaultInstance = new HashMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pv181.jca.protobuf.entities.HashMessage)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pv181_jca_protobuf_entities_DemoMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pv181_jca_protobuf_entities_DemoMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pv181_jca_protobuf_entities_HashMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pv181_jca_protobuf_entities_HashMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016messages.proto\022\033pv181.jca.protobuf.ent" +
      "ities\"_\n\013DemoMessage\022\022\n\007version\030\001 \001(\005:\0011" +
      "\022\021\n\tbyteField\030\002 \001(\014\022\023\n\013stringField\030\003 \001(\t" +
      "\022\024\n\014integerField\030\004 \001(\005\"D\n\024AESCiphertextM" +
      "essage\022\n\n\002iv\030\001 \001(\014\022\014\n\004salt\030\002 \001(\014\022\022\n\nciph" +
      "ertext\030\003 \001(\014\"\234\002\n\013HashMessage\022\013\n\003uco\030\001 \002(" +
      "\t\022\020\n\010hashType\030\002 \002(\005\022\014\n\004salt\030\003 \001(\004\022\021\n\thas" +
      "hInput\030\004 \002(\t\022\014\n\004hash\030\005 \002(\014\022\026\n\016hashHexEnc" +
      "oded\030\006 \001(\t\022\r\n\005aesIv\030\007 \001(\014\022\016\n\006aesKey\030\010 \001(" +
      "\014\022\025\n\raesCiphertext\030\t \001(\014\022\017\n\007hmacKey\030\n \001(",
      "\014\022\014\n\004hmac\030\013 \001(\014\022\022\n\nprivateKey\030\014 \001(\014\022\021\n\tp" +
      "ublicKey\030\r \001(\014\022\024\n\014rsaSignature\030\016 \001(\014\022\025\n\r" +
      "rsaCiphertext\030\017 \001(\014B\014B\010MessagesH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_pv181_jca_protobuf_entities_DemoMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pv181_jca_protobuf_entities_DemoMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pv181_jca_protobuf_entities_DemoMessage_descriptor,
        new java.lang.String[] { "Version", "ByteField", "StringField", "IntegerField", });
    internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pv181_jca_protobuf_entities_AESCiphertextMessage_descriptor,
        new java.lang.String[] { "Iv", "Salt", "Ciphertext", });
    internal_static_pv181_jca_protobuf_entities_HashMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pv181_jca_protobuf_entities_HashMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pv181_jca_protobuf_entities_HashMessage_descriptor,
        new java.lang.String[] { "Uco", "HashType", "Salt", "HashInput", "Hash", "HashHexEncoded", "AesIv", "AesKey", "AesCiphertext", "HmacKey", "Hmac", "PrivateKey", "PublicKey", "RsaSignature", "RsaCiphertext", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
